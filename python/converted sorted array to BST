converted sorted array to BST

106# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def sortedArrayToBST(self, nums):
        """
        :type nums: List[int]
        :rtype: TreeNode
        """
        if nums is None or len(nums)==0:
            return None
        if len(nums)==1:
            return TreeNode(nums[0])
        
        n = len(nums)
        root = TreeNode(nums[n/2])
        root.left = self.sortedArrayToBST(nums[:n/2])
        root.right = self.sortedArrayToBST(nums[n/2+1:])
        
        return root

107 linked list to BST

class Solution(object):
    def sortedListToBST(self, head):
        """
        :type head: ListNode
        :rtype: TreeNode
        """
        nums=[]
        while head is not None:
            nums.append(head.val)
            head = head.next
        return self.sortedArrayToBST(nums)
      
    def sortedArrayToBST(self, nums):
        """
        :type nums: List[int]
        :rtype: TreeNode
        """
        if nums is None or len(nums)==0:
            return None
        if len(nums)==1:
            return TreeNode(nums[0])
        
        n = len(nums)
        root = TreeNode(nums[n/2])
        root.left = self.sortedArrayToBST(nums[:n/2])
        root.right = self.sortedArrayToBST(nums[n/2+1:])
        
        return root

        class Solution(object):
    def sortedListToBST(self, head):
        """
        :type head: ListNode
        :rtype: TreeNode
        """
        if not head:
            return None
            
        if not head.next:
            return TreeNode(head.val)
            
        slow = head
        fast = head.next.next
       
        
        while  fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        temp = slow.next
        root = TreeNode(temp.val)
        slow.next = None
        root.left = self.sortedListToBST(head)
        root.left = self.sortedListToBST(temp.next)
        
        return root